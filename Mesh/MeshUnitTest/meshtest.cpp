#include "meshtest.h"

namespace MyMesh::Test {
/*void MeshTest::testEmptyMesh()
{
    QTest::ignoreMessage(QtFatalMsg, "ASSERT: !vertices.isEmpty()");
    Mesh mComp({}, {}, {}, {}, {}, {}, {}, {});

    QFAIL("Q_ASSERT didn't work");
}

void MeshTest::testEmptyVertices()
{
    QTest::ignoreMessage(QtFatalMsg, "ASSERT: !vertices.isEmpty()");
    Mesh mComp(
                {},

                {{0.000000, 0.000000},
                 {1.000000, 0.000000},
                 {1.000000, 1.000000},
                 {0.000000, 1.000000}},

                {{0.000000, 0.000000, -1.000000},
                 {0.000000, 0.000000, 1.000000},
                 {1.000000, 0.000000, 0.000000},
                 {-1.000000, 0.000000, 0.000000},
                 {0.000000, 1.000000, 0.000000},
                 {0.000000, -1.000000, 0.000000}},

                {{1, 2, 3, 4},
                 {5, 6, 7, 8},
                 {1, 5, 6, 2},
                 {4, 8, 7, 3},
                 {1, 4, 8, 5},
                 {2, 3, 7, 6}},

                {{1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4}},

                {{1, 1, 1, 1},
                 {2, 2, 2, 2},
                 {3, 3, 3, 3},
                 {4, 4, 4, 4},
                 {5, 5, 5, 5},
                 {6, 6, 6, 6}},

                {0, 0, 0, 0, 0, 0},

                {"cube"});

    QFAIL("Q_ASSERT didn't work");
}

void MeshTest::testEmptyFaces()
{
    QEXPECT_FAIL("", "Ожидается аварийное завершение из-за Q_ASSERT", Abort);
    Mesh mComp(
                {{1.000000, 1.000000, -1.000000},
                 {1.000000, -1.000000, -1.000000},
                 {-1.000000, -1.000000, -1.000000},
                 {-1.000000, 1.000000, -1.000000},
                 {1.000000, 1.000000, 1.000000},
                 {1.000000, -1.000000, 1.000000},
                 {-1.000000, -1.000000, 1.000000},
                 {-1.000000, 1.000000, 1.000000}},

                {{0.000000, 0.000000},
                 {1.000000, 0.000000},
                 {1.000000, 1.000000},
                 {0.000000, 1.000000}},

                {{0.000000, 0.000000, -1.000000},
                 {0.000000, 0.000000, 1.000000},
                 {1.000000, 0.000000, 0.000000},
                 {-1.000000, 0.000000, 0.000000},
                 {0.000000, 1.000000, 0.000000},
                 {0.000000, -1.000000, 0.000000}},

                {},

                {{1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4}},

                {{1, 1, 1, 1},
                 {2, 2, 2, 2},
                 {3, 3, 3, 3},
                 {4, 4, 4, 4},
                 {5, 5, 5, 5},
                 {6, 6, 6, 6}},

                {0, 0, 0, 0, 0, 0},

                {"cube"});

    QFAIL("Q_ASSERT didn't work");
}
*/
void MeshTest::testMeshComparison()
{
    MyMesh::Mesh m;
    m.init(
                {{0.000000, 1.000000, 0.000000},
                 {-1.000000, -1.000000, 1.000000},
                 {1.000000, -1.000000, 1.000000},
                 {1.000000, -1.000000, -1.000000},
                 {-1.000000, -1.000000, -1.000000}},

                {{0.500000, 1.000000},
                 {0.000000, 0.000000},
                 {1.000000, 0.000000},
                 {1.000000, 0.000000},
                 {0.000000, 0.000000}},

                {{0.000000, 0.707107, 0.707107},
                 {-0.707107, -0.707107, 0.000000},
                 {0.707107, -0.707107, 0.000000},
                 {0.000000, -0.707107, -0.707107},
                 {-0.707107, -0.707107, 0.000000}},

                {{1, 2, 3},
                 {1, 3, 4},
                 {1, 4, 5},
                 {1, 5, 2}},

                {{1, 2, 3},
                 {1, 3, 4},
                 {1, 4, 5},
                 {1, 5, 2}},

                {{1, 2, 3},
                 {1, 3, 4},
                 {1, 4, 5},
                 {1, 5, 2}},

                {0, 0, 0, 0},

                {"pyramid"});

    MyMesh::Mesh mComp;
    mComp.init(
                {{1.000000, 1.000000, -1.000000},
                 {1.000000, -1.000000, -1.000000},
                 {-1.000000, -1.000000, -1.000000},
                 {-1.000000, 1.000000, -1.000000},
                 {1.000000, 1.000000, 1.000000},
                 {1.000000, -1.000000, 1.000000},
                 {-1.000000, -1.000000, 1.000000},
                 {-1.000000, 1.000000, 1.000000}},

                {{0.000000, 0.000000},
                 {1.000000, 0.000000},
                 {1.000000, 1.000000},
                 {0.000000, 1.000000}},

                {{0.000000, 0.000000, -1.000000},
                 {0.000000, 0.000000, 1.000000},
                 {1.000000, 0.000000, 0.000000},
                 {-1.000000, 0.000000, 0.000000},
                 {0.000000, 1.000000, 0.000000},
                 {0.000000, -1.000000, 0.000000}},

                {{1, 2, 3, 4},
                 {5, 6, 7, 8},
                 {1, 5, 6, 2},
                 {4, 8, 7, 3},
                 {1, 4, 8, 5},
                 {2, 3, 7, 6}},

                {{1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4}},

                {{1, 1, 1, 1},
                 {2, 2, 2, 2},
                 {3, 3, 3, 3},
                 {4, 4, 4, 4},
                 {5, 5, 5, 5},
                 {6, 6, 6, 6}},

                {0, 0, 0, 0, 0, 0},

                {"cube"});

    bool same = (m == mComp);
    QCOMPARE(same, 0);
}

void MeshTest::testBoundBoxes()
{
    MyMesh::Mesh actual;
    actual.init(
                {{1.000000, 1.000000, -1.000000},
                 {1.000000, -1.000000, -1.000000},
                 {-1.000000, -1.000000, -1.000000},
                 {-1.000000, 1.000000, -1.000000},
                 {1.000000, 1.000000, 1.000000},
                 {1.000000, -1.000000, 1.000000},
                 {-1.000000, -1.000000, 1.000000},
                 {-1.000000, 1.000000, 1.000000}},

                {{0.000000, 0.000000},
                 {1.000000, 0.000000},
                 {1.000000, 1.000000},
                 {0.000000, 1.000000}},

                {{0.000000, 0.000000, -1.000000},
                 {0.000000, 0.000000, 1.000000},
                 {1.000000, 0.000000, 0.000000},
                 {-1.000000, 0.000000, 0.000000},
                 {0.000000, 1.000000, 0.000000},
                 {0.000000, -1.000000, 0.000000}},

                {{1, 2, 3, 4},
                 {5, 6, 7, 8},
                 {1, 5, 6, 2},
                 {4, 8, 7, 3},
                 {1, 4, 8, 5},
                 {2, 3, 7, 6}},

                {{1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4}},

                {{1, 1, 1, 1},
                 {2, 2, 2, 2},
                 {3, 3, 3, 3},
                 {4, 4, 4, 4},
                 {5, 5, 5, 5},
                 {6, 6, 6, 6}},

                {0, 0, 0, 0, 0, 0},

                {"cube"});

    QCOMPARE(actual.meshBoundingBox(), BoundingBox({-1, -1, -1}, {1, 1, 1}));
}

void MeshTest::testCreatingStartsVector()
{
    MyMesh::Mesh actual;
    actual.init(
                {{1.000000, 1.000000, -1.000000},
                 {1.000000, -1.000000, -1.000000},
                 {-1.000000, -1.000000, -1.000000},
                 {-1.000000, 1.000000, -1.000000},
                 {1.000000, 1.000000, 1.000000},
                 {1.000000, -1.000000, 1.000000},
                 {-1.000000, -1.000000, 1.000000},
                 {-1.000000, 1.000000, 1.000000}},

                {{0.000000, 0.000000},
                 {1.000000, 0.000000},
                 {1.000000, 1.000000},
                 {0.000000, 1.000000}},

                {{0.000000, 0.000000, -1.000000},
                 {0.000000, 0.000000, 1.000000},
                 {1.000000, 0.000000, 0.000000},
                 {-1.000000, 0.000000, 0.000000},
                 {0.000000, 1.000000, 0.000000},
                 {0.000000, -1.000000, 0.000000}},

                {{1, 2, 3, 4},
                 {5, 6, 7, 8},
                 {1, 5, 6, 2},
                 {4, 8, 7, 3},
                 {1, 4, 8, 5},
                 {2, 3, 7, 6}},

                {{1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4},
                 {1, 2, 3, 4}},

                {{1, 1, 1, 1},
                 {2, 2, 2, 2},
                 {3, 3, 3, 3},
                 {4, 4, 4, 4},
                 {5, 5, 5, 5},
                 {6, 6, 6, 6}},

                {0, 0, 0, 0, 0, 0},

                {"cube"});
    QVector<int> starts = actual.buildPolygonStartsVector();
    QVector<int> indices = actual.buildPolygonVertexIndicesVector();
    QCOMPARE(starts, QVector<int>({0, 4, 8, 12, 16, 20, 24}));
    QCOMPARE(indices, QVector<int>({1, 2, 3, 4, 5, 6, 7, 8, 1, 5, 6, 2, 4, 8, 7, 3, 1, 4, 8, 5, 2, 3, 7, 6}));
}
}
